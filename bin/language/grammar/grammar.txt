#Tokens:
id = "[a-zA-Z][a-zA-Z0-9_]*";
int = "-?[0-9]+";
float = "-?[0-9]+\\.[0-9]+";
!"\\s+";
error = ".";

#Rules:

prog = "def", assign | exp;

assign = idlist, "=", exp #name Assign;

idlist = id #name IdListHead
	| idlist, id #name IdListAppend;

exp = id
	| int
	| float
	| "true" #name True
	| "false" #name False
	| "if", exp, "then", exp, "else", exp #name Conditional
	| exp, "where", "{", {assign, ";"}, "}" #name Where
	| binop
	| uop
	| exp, exp #prec FAPPLY #name FApply
	| "(", exp, ")" #name ParenExp
	;

binop = exp, "+", exp #name Add
	| exp, "-", exp #name Subtract
	| exp, "*", exp #name Multiply
	| exp, "/", exp #name Divide
	| exp, "^", exp #name Power
	| exp, "<", exp #name Less
	| exp, "==", exp #name Eq
	| exp, ">", exp #name Greater
	;

uop = "-", exp #prec UMINUS #name Negate
	| "!", exp #prec NOT #name Not
	;


#Precedence:
LEFT FAPPLY;
LEFT 200 "+", "-";
LEFT 190 "*", "/";
RIGHT 180 "^";
LEFT 170 UMINUS, NOT;

#Pseudonyms:


