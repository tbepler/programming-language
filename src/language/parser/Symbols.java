
package language.parser;

import language.parser.framework.Symbol;


/**
 * This class was generated by the LRPaGe parser generator v1.0 using the com.sun.codemodel library.
 * 
 * <P>LRPaGe is available from https://github.com/tbepler/LRPaGe.
 * <P>CodeModel is available from https://codemodel.java.net/.
 * 
 */
public enum Symbols
    implements Symbol
{

    EOF,
    _PUNCTUATION21("`!'"),
    _PUNCTUATION20("`>'"),
    _PUNCTUATION19("`=='"),
    _PUNCTUATION18("`<'"),
    _PUNCTUATION17("`)'"),
    _PUNCTUATION16("`('"),
    _PUNCTUATION15("`}'"),
    _PUNCTUATION14("`;'"),
    _PUNCTUATION13("`{'"),
    _PUNCTUATION12("`where'"),
    _PUNCTUATION11("`else'"),
    _PUNCTUATION10("`then'"),
    _PUNCTUATION9("`if'"),
    _PUNCTUATION8("`false'"),
    _PUNCTUATION7("`true'"),
    _PUNCTUATION6("`='"),
    _PUNCTUATION5("`def'"),
    _PUNCTUATION4("`^'"),
    _PUNCTUATION3("`/'"),
    _PUNCTUATION2("`*'"),
    _PUNCTUATION1("`-'"),
    _PUNCTUATION0("`+'"),
    ID,
    INT,
    FLOAT,
    ERROR,
    ASSIGN,
    UOP,
    ASSIGN_PUNCTUATION14LIST,
    PROG,
    IDLIST,
    BINOP,
    EXP;
    private final String name;

    private Symbols(String name) {
        this.name = name;
    }

    private Symbols() {
        this.name = null;
    }

    @Override
    public String toString() {
        if (name == null) {
            return super.toString();
        }
        return name;
    }

    @Override
    public int type() {
        return this.ordinal();
    }

}
